{
  "version": 3,
  "sources": ["../../@esbuild-plugins/node-globals-polyfill/process.js", "../../@esbuild-plugins/node-globals-polyfill/Buffer.js", "../../@esbuild-plugins/node-globals-polyfill/_buffer.js"],
  "sourcesContent": ["// shim for using process in browser\r\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\r\n\r\nfunction defaultSetTimout() {\r\n    throw new Error('setTimeout has not been defined')\r\n}\r\nfunction defaultClearTimeout() {\r\n    throw new Error('clearTimeout has not been defined')\r\n}\r\nvar cachedSetTimeout = defaultSetTimout\r\nvar cachedClearTimeout = defaultClearTimeout\r\nif (typeof global.setTimeout === 'function') {\r\n    cachedSetTimeout = setTimeout\r\n}\r\nif (typeof global.clearTimeout === 'function') {\r\n    cachedClearTimeout = clearTimeout\r\n}\r\n\r\nfunction runTimeout(fun) {\r\n    if (cachedSetTimeout === setTimeout) {\r\n        //normal enviroments in sane situations\r\n        return setTimeout(fun, 0)\r\n    }\r\n    // if setTimeout wasn't available but was latter defined\r\n    if (\r\n        (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&\r\n        setTimeout\r\n    ) {\r\n        cachedSetTimeout = setTimeout\r\n        return setTimeout(fun, 0)\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedSetTimeout(fun, 0)\r\n    } catch (e) {\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\r\n            return cachedSetTimeout.call(null, fun, 0)\r\n        } catch (e) {\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\r\n            return cachedSetTimeout.call(this, fun, 0)\r\n        }\r\n    }\r\n}\r\nfunction runClearTimeout(marker) {\r\n    if (cachedClearTimeout === clearTimeout) {\r\n        //normal enviroments in sane situations\r\n        return clearTimeout(marker)\r\n    }\r\n    // if clearTimeout wasn't available but was latter defined\r\n    if (\r\n        (cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) &&\r\n        clearTimeout\r\n    ) {\r\n        cachedClearTimeout = clearTimeout\r\n        return clearTimeout(marker)\r\n    }\r\n    try {\r\n        // when when somebody has screwed with setTimeout but no I.E. maddness\r\n        return cachedClearTimeout(marker)\r\n    } catch (e) {\r\n        try {\r\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\r\n            return cachedClearTimeout.call(null, marker)\r\n        } catch (e) {\r\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\r\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\r\n            return cachedClearTimeout.call(this, marker)\r\n        }\r\n    }\r\n}\r\nvar queue = []\r\nvar draining = false\r\nvar currentQueue\r\nvar queueIndex = -1\r\n\r\nfunction cleanUpNextTick() {\r\n    if (!draining || !currentQueue) {\r\n        return\r\n    }\r\n    draining = false\r\n    if (currentQueue.length) {\r\n        queue = currentQueue.concat(queue)\r\n    } else {\r\n        queueIndex = -1\r\n    }\r\n    if (queue.length) {\r\n        drainQueue()\r\n    }\r\n}\r\n\r\nfunction drainQueue() {\r\n    if (draining) {\r\n        return\r\n    }\r\n    var timeout = runTimeout(cleanUpNextTick)\r\n    draining = true\r\n\r\n    var len = queue.length\r\n    while (len) {\r\n        currentQueue = queue\r\n        queue = []\r\n        while (++queueIndex < len) {\r\n            if (currentQueue) {\r\n                currentQueue[queueIndex].run()\r\n            }\r\n        }\r\n        queueIndex = -1\r\n        len = queue.length\r\n    }\r\n    currentQueue = null\r\n    draining = false\r\n    runClearTimeout(timeout)\r\n}\r\nfunction nextTick(fun) {\r\n    var args = new Array(arguments.length - 1)\r\n    if (arguments.length > 1) {\r\n        for (var i = 1; i < arguments.length; i++) {\r\n            args[i - 1] = arguments[i]\r\n        }\r\n    }\r\n    queue.push(new Item(fun, args))\r\n    if (queue.length === 1 && !draining) {\r\n        runTimeout(drainQueue)\r\n    }\r\n}\r\n// v8 likes predictible objects\r\nfunction Item(fun, array) {\r\n    this.fun = fun\r\n    this.array = array\r\n}\r\nItem.prototype.run = function() {\r\n    this.fun.apply(null, this.array)\r\n}\r\nvar title = 'browser'\r\nvar platform = 'browser'\r\nvar browser = true\r\nvar env = {}\r\nvar argv = []\r\nvar version = '' // empty string to avoid regexp issues\r\nvar versions = {}\r\nvar release = {}\r\nvar config = {}\r\n\r\nfunction noop() {}\r\n\r\nvar on = noop\r\nvar addListener = noop\r\nvar once = noop\r\nvar off = noop\r\nvar removeListener = noop\r\nvar removeAllListeners = noop\r\nvar emit = noop\r\n\r\nfunction binding(name) {\r\n    throw new Error('process.binding is not supported')\r\n}\r\n\r\nfunction cwd() {\r\n    return '/'\r\n}\r\nfunction chdir(dir) {\r\n    throw new Error('process.chdir is not supported')\r\n}\r\nfunction umask() {\r\n    return 0\r\n}\r\n\r\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\r\nvar performance = global.performance || {}\r\nvar performanceNow =\r\n    performance.now ||\r\n    performance.mozNow ||\r\n    performance.msNow ||\r\n    performance.oNow ||\r\n    performance.webkitNow ||\r\n    function() {\r\n        return new Date().getTime()\r\n    }\r\n\r\n// generate timestamp or delta\r\n// see http://nodejs.org/api/process.html#process_process_hrtime\r\nfunction hrtime(previousTimestamp) {\r\n    var clocktime = performanceNow.call(performance) * 1e-3\r\n    var seconds = Math.floor(clocktime)\r\n    var nanoseconds = Math.floor((clocktime % 1) * 1e9)\r\n    if (previousTimestamp) {\r\n        seconds = seconds - previousTimestamp[0]\r\n        nanoseconds = nanoseconds - previousTimestamp[1]\r\n        if (nanoseconds < 0) {\r\n            seconds--\r\n            nanoseconds += 1e9\r\n        }\r\n    }\r\n    return [seconds, nanoseconds]\r\n}\r\n\r\nvar startTime = new Date()\r\nfunction uptime() {\r\n    var currentTime = new Date()\r\n    var dif = currentTime - startTime\r\n    return dif / 1000\r\n}\r\n\r\nexport var process = {\r\n    nextTick: nextTick,\r\n    title: title,\r\n    browser: browser,\r\n    env: env,\r\n    argv: argv,\r\n    version: version,\r\n    versions: versions,\r\n    on: on,\r\n    addListener: addListener,\r\n    once: once,\r\n    off: off,\r\n    removeListener: removeListener,\r\n    removeAllListeners: removeAllListeners,\r\n    emit: emit,\r\n    binding: binding,\r\n    cwd: cwd,\r\n    chdir: chdir,\r\n    umask: umask,\r\n    hrtime: hrtime,\r\n    platform: platform,\r\n    release: release,\r\n    config: config,\r\n    uptime: uptime,\r\n}\r\n\r\n// replace process.env.VAR with define\r\n\r\nconst defines = {}\r\nObject.keys(defines).forEach((key) => {\r\n    const segs = key.split('.')\r\n    let target = process\r\n    for (let i = 0; i < segs.length; i++) {\r\n        const seg = segs[i]\r\n        if (i === segs.length - 1) {\r\n            target[seg] = defines[key]\r\n        } else {\r\n            target = target[seg] || (target[seg] = {})\r\n        }\r\n    }\r\n})\r\n", "// taken from https://github.com/calvinmetcalf/buffer-es6\r\n\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\r\n * @license  MIT\r\n */\r\n/* eslint-disable no-proto */\r\n\r\nvar lookup = []\r\nvar revLookup = []\r\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\r\nvar inited = false\r\nfunction init() {\r\n    inited = true\r\n    var code =\r\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\r\n    for (var i = 0, len = code.length; i < len; ++i) {\r\n        lookup[i] = code[i]\r\n        revLookup[code.charCodeAt(i)] = i\r\n    }\r\n\r\n    revLookup['-'.charCodeAt(0)] = 62\r\n    revLookup['_'.charCodeAt(0)] = 63\r\n}\r\n\r\nfunction base64toByteArray(b64) {\r\n    if (!inited) {\r\n        init()\r\n    }\r\n    var i, j, l, tmp, placeHolders, arr\r\n    var len = b64.length\r\n\r\n    if (len % 4 > 0) {\r\n        throw new Error('Invalid string. Length must be a multiple of 4')\r\n    }\r\n\r\n    // the number of equal signs (place holders)\r\n    // if there are two placeholders, than the two characters before it\r\n    // represent one byte\r\n    // if there is only one, then the three characters before it represent 2 bytes\r\n    // this is just a cheap hack to not do indexOf twice\r\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\r\n\r\n    // base64 is 4/3 + up to two characters of the original data\r\n    arr = new Arr((len * 3) / 4 - placeHolders)\r\n\r\n    // if there are placeholders, only get up to the last complete 4 chars\r\n    l = placeHolders > 0 ? len - 4 : len\r\n\r\n    var L = 0\r\n\r\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\r\n        tmp =\r\n            (revLookup[b64.charCodeAt(i)] << 18) |\r\n            (revLookup[b64.charCodeAt(i + 1)] << 12) |\r\n            (revLookup[b64.charCodeAt(i + 2)] << 6) |\r\n            revLookup[b64.charCodeAt(i + 3)]\r\n        arr[L++] = (tmp >> 16) & 0xff\r\n        arr[L++] = (tmp >> 8) & 0xff\r\n        arr[L++] = tmp & 0xff\r\n    }\r\n\r\n    if (placeHolders === 2) {\r\n        tmp =\r\n            (revLookup[b64.charCodeAt(i)] << 2) |\r\n            (revLookup[b64.charCodeAt(i + 1)] >> 4)\r\n        arr[L++] = tmp & 0xff\r\n    } else if (placeHolders === 1) {\r\n        tmp =\r\n            (revLookup[b64.charCodeAt(i)] << 10) |\r\n            (revLookup[b64.charCodeAt(i + 1)] << 4) |\r\n            (revLookup[b64.charCodeAt(i + 2)] >> 2)\r\n        arr[L++] = (tmp >> 8) & 0xff\r\n        arr[L++] = tmp & 0xff\r\n    }\r\n\r\n    return arr\r\n}\r\n\r\nfunction tripletToBase64(num) {\r\n    return (\r\n        lookup[(num >> 18) & 0x3f] +\r\n        lookup[(num >> 12) & 0x3f] +\r\n        lookup[(num >> 6) & 0x3f] +\r\n        lookup[num & 0x3f]\r\n    )\r\n}\r\n\r\nfunction encodeChunk(uint8, start, end) {\r\n    var tmp\r\n    var output = []\r\n    for (var i = start; i < end; i += 3) {\r\n        tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2]\r\n        output.push(tripletToBase64(tmp))\r\n    }\r\n    return output.join('')\r\n}\r\n\r\nfunction base64fromByteArray(uint8) {\r\n    if (!inited) {\r\n        init()\r\n    }\r\n    var tmp\r\n    var len = uint8.length\r\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\r\n    var output = ''\r\n    var parts = []\r\n    var maxChunkLength = 16383 // must be multiple of 3\r\n\r\n    // go through the array every three bytes, we'll deal with trailing stuff later\r\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\r\n        parts.push(\r\n            encodeChunk(\r\n                uint8,\r\n                i,\r\n                i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\r\n            ),\r\n        )\r\n    }\r\n\r\n    // pad the end with zeros, but make sure to not forget the extra bytes\r\n    if (extraBytes === 1) {\r\n        tmp = uint8[len - 1]\r\n        output += lookup[tmp >> 2]\r\n        output += lookup[(tmp << 4) & 0x3f]\r\n        output += '=='\r\n    } else if (extraBytes === 2) {\r\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1]\r\n        output += lookup[tmp >> 10]\r\n        output += lookup[(tmp >> 4) & 0x3f]\r\n        output += lookup[(tmp << 2) & 0x3f]\r\n        output += '='\r\n    }\r\n\r\n    parts.push(output)\r\n\r\n    return parts.join('')\r\n}\r\n\r\nvar INSPECT_MAX_BYTES = 50\r\n\r\n/**\r\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\r\n *   === true    Use Uint8Array implementation (fastest)\r\n *   === false   Use Object implementation (most compatible, even IE6)\r\n *\r\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\r\n * Opera 11.6+, iOS 4.2+.\r\n *\r\n * Due to various browser bugs, sometimes the Object implementation will be used even\r\n * when the browser supports typed arrays.\r\n *\r\n * Note:\r\n *\r\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\r\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\r\n *\r\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\r\n *\r\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\r\n *     incorrect length in some situations.\r\n\r\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\r\n * get the Object implementation, which is slower but behaves correctly.\r\n */\r\nBuffer.TYPED_ARRAY_SUPPORT =\r\n    global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : true\r\n\r\nfunction kMaxLength() {\r\n    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff\r\n}\r\n\r\nfunction createBuffer(that, length) {\r\n    if (kMaxLength() < length) {\r\n        throw new RangeError('Invalid typed array length')\r\n    }\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        // Return an augmented `Uint8Array` instance, for best performance\r\n        that = new Uint8Array(length)\r\n        that.__proto__ = Buffer.prototype\r\n    } else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        if (that === null) {\r\n            that = new Buffer(length)\r\n        }\r\n        that.length = length\r\n    }\r\n\r\n    return that\r\n}\r\n\r\n/**\r\n * The Buffer constructor returns instances of `Uint8Array` that have their\r\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\r\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\r\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\r\n * returns a single octet.\r\n *\r\n * The `Uint8Array` prototype remains unmodified.\r\n */\r\n\r\nexport function Buffer(arg, encodingOrOffset, length) {\r\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\r\n        return new Buffer(arg, encodingOrOffset, length)\r\n    }\r\n\r\n    // Common case.\r\n    if (typeof arg === 'number') {\r\n        if (typeof encodingOrOffset === 'string') {\r\n            throw new Error(\r\n                'If encoding is specified then the first argument must be a string',\r\n            )\r\n        }\r\n        return allocUnsafe(this, arg)\r\n    }\r\n    return from(this, arg, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.poolSize = 8192 // not used by this implementation\r\n\r\n// TODO: Legacy, not needed anymore. Remove in next major version.\r\nBuffer._augment = function(arr) {\r\n    arr.__proto__ = Buffer.prototype\r\n    return arr\r\n}\r\n\r\nfunction from(that, value, encodingOrOffset, length) {\r\n    if (typeof value === 'number') {\r\n        throw new TypeError('\"value\" argument must not be a number')\r\n    }\r\n\r\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\r\n        return fromArrayBuffer(that, value, encodingOrOffset, length)\r\n    }\r\n\r\n    if (typeof value === 'string') {\r\n        return fromString(that, value, encodingOrOffset)\r\n    }\r\n\r\n    return fromObject(that, value)\r\n}\r\n\r\n/**\r\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\r\n * if value is a number.\r\n * Buffer.from(str[, encoding])\r\n * Buffer.from(array)\r\n * Buffer.from(buffer)\r\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\r\n **/\r\nBuffer.from = function(value, encodingOrOffset, length) {\r\n    return from(null, value, encodingOrOffset, length)\r\n}\r\n\r\nBuffer.kMaxLength = kMaxLength()\r\n\r\nif (Buffer.TYPED_ARRAY_SUPPORT) {\r\n    Buffer.prototype.__proto__ = Uint8Array.prototype\r\n    Buffer.__proto__ = Uint8Array\r\n    if (\r\n        typeof Symbol !== 'undefined' &&\r\n        Symbol.species &&\r\n        Buffer[Symbol.species] === Buffer\r\n    ) {\r\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\r\n        // Object.defineProperty(Buffer, Symbol.species, {\r\n        //   value: null,\r\n        //   configurable: true\r\n        // })\r\n    }\r\n}\r\n\r\nfunction assertSize(size) {\r\n    if (typeof size !== 'number') {\r\n        throw new TypeError('\"size\" argument must be a number')\r\n    } else if (size < 0) {\r\n        throw new RangeError('\"size\" argument must not be negative')\r\n    }\r\n}\r\n\r\nfunction alloc(that, size, fill, encoding) {\r\n    assertSize(size)\r\n    if (size <= 0) {\r\n        return createBuffer(that, size)\r\n    }\r\n    if (fill !== undefined) {\r\n        // Only pay attention to encoding if it's a string. This\r\n        // prevents accidentally sending in a number that would\r\n        // be interpretted as a start offset.\r\n        return typeof encoding === 'string'\r\n            ? createBuffer(that, size).fill(fill, encoding)\r\n            : createBuffer(that, size).fill(fill)\r\n    }\r\n    return createBuffer(that, size)\r\n}\r\n\r\n/**\r\n * Creates a new filled Buffer instance.\r\n * alloc(size[, fill[, encoding]])\r\n **/\r\nBuffer.alloc = function(size, fill, encoding) {\r\n    return alloc(null, size, fill, encoding)\r\n}\r\n\r\nfunction allocUnsafe(that, size) {\r\n    assertSize(size)\r\n    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\r\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\r\n        for (var i = 0; i < size; ++i) {\r\n            that[i] = 0\r\n        }\r\n    }\r\n    return that\r\n}\r\n\r\n/**\r\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\r\n * */\r\nBuffer.allocUnsafe = function(size) {\r\n    return allocUnsafe(null, size)\r\n}\r\n/**\r\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\r\n */\r\nBuffer.allocUnsafeSlow = function(size) {\r\n    return allocUnsafe(null, size)\r\n}\r\n\r\nfunction fromString(that, string, encoding) {\r\n    if (typeof encoding !== 'string' || encoding === '') {\r\n        encoding = 'utf8'\r\n    }\r\n\r\n    if (!Buffer.isEncoding(encoding)) {\r\n        throw new TypeError('\"encoding\" must be a valid string encoding')\r\n    }\r\n\r\n    var length = byteLength(string, encoding) | 0\r\n    that = createBuffer(that, length)\r\n\r\n    var actual = that.write(string, encoding)\r\n\r\n    if (actual !== length) {\r\n        // Writing a hex string, for example, that contains invalid characters will\r\n        // cause everything after the first invalid character to be ignored. (e.g.\r\n        // 'abxxcd' will be treated as 'ab')\r\n        that = that.slice(0, actual)\r\n    }\r\n\r\n    return that\r\n}\r\n\r\nfunction fromArrayLike(that, array) {\r\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\r\n    that = createBuffer(that, length)\r\n    for (var i = 0; i < length; i += 1) {\r\n        that[i] = array[i] & 255\r\n    }\r\n    return that\r\n}\r\n\r\nfunction fromArrayBuffer(that, array, byteOffset, length) {\r\n    array.byteLength // this throws if `array` is not a valid ArrayBuffer\r\n\r\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\r\n        throw new RangeError(\"'offset' is out of bounds\")\r\n    }\r\n\r\n    if (array.byteLength < byteOffset + (length || 0)) {\r\n        throw new RangeError(\"'length' is out of bounds\")\r\n    }\r\n\r\n    if (byteOffset === undefined && length === undefined) {\r\n        array = new Uint8Array(array)\r\n    } else if (length === undefined) {\r\n        array = new Uint8Array(array, byteOffset)\r\n    } else {\r\n        array = new Uint8Array(array, byteOffset, length)\r\n    }\r\n\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        // Return an augmented `Uint8Array` instance, for best performance\r\n        that = array\r\n        that.__proto__ = Buffer.prototype\r\n    } else {\r\n        // Fallback: Return an object instance of the Buffer class\r\n        that = fromArrayLike(that, array)\r\n    }\r\n    return that\r\n}\r\n\r\nfunction fromObject(that, obj) {\r\n    if (internalIsBuffer(obj)) {\r\n        var len = checked(obj.length) | 0\r\n        that = createBuffer(that, len)\r\n\r\n        if (that.length === 0) {\r\n            return that\r\n        }\r\n\r\n        obj.copy(that, 0, 0, len)\r\n        return that\r\n    }\r\n\r\n    if (obj) {\r\n        if (\r\n            (typeof ArrayBuffer !== 'undefined' &&\r\n                obj.buffer instanceof ArrayBuffer) ||\r\n            'length' in obj\r\n        ) {\r\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\r\n                return createBuffer(that, 0)\r\n            }\r\n            return fromArrayLike(that, obj)\r\n        }\r\n\r\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\r\n            return fromArrayLike(that, obj.data)\r\n        }\r\n    }\r\n\r\n    throw new TypeError(\r\n        'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',\r\n    )\r\n}\r\n\r\nfunction checked(length) {\r\n    // Note: cannot use `length < kMaxLength()` here because that fails when\r\n    // length is NaN (which is otherwise coerced to zero.)\r\n    if (length >= kMaxLength()) {\r\n        throw new RangeError(\r\n            'Attempt to allocate Buffer larger than maximum ' +\r\n                'size: 0x' +\r\n                kMaxLength().toString(16) +\r\n                ' bytes',\r\n        )\r\n    }\r\n    return length | 0\r\n}\r\n\r\nexport function SlowBuffer(length) {\r\n    if (+length != length) {\r\n        // eslint-disable-line eqeqeq\r\n        length = 0\r\n    }\r\n    return Buffer.alloc(+length)\r\n}\r\nBuffer.isBuffer = isBuffer\r\nfunction internalIsBuffer(b) {\r\n    return !!(b != null && b._isBuffer)\r\n}\r\n\r\nBuffer.compare = function compare(a, b) {\r\n    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\r\n        throw new TypeError('Arguments must be Buffers')\r\n    }\r\n\r\n    if (a === b) return 0\r\n\r\n    var x = a.length\r\n    var y = b.length\r\n\r\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\r\n        if (a[i] !== b[i]) {\r\n            x = a[i]\r\n            y = b[i]\r\n            break\r\n        }\r\n    }\r\n\r\n    if (x < y) return -1\r\n    if (y < x) return 1\r\n    return 0\r\n}\r\n\r\nBuffer.isEncoding = function isEncoding(encoding) {\r\n    switch (String(encoding).toLowerCase()) {\r\n        case 'hex':\r\n        case 'utf8':\r\n        case 'utf-8':\r\n        case 'ascii':\r\n        case 'latin1':\r\n        case 'binary':\r\n        case 'base64':\r\n        case 'ucs2':\r\n        case 'ucs-2':\r\n        case 'utf16le':\r\n        case 'utf-16le':\r\n            return true\r\n        default:\r\n            return false\r\n    }\r\n}\r\n\r\nBuffer.concat = function concat(list, length) {\r\n    if (!Array.isArray(list)) {\r\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n    }\r\n\r\n    if (list.length === 0) {\r\n        return Buffer.alloc(0)\r\n    }\r\n\r\n    var i\r\n    if (length === undefined) {\r\n        length = 0\r\n        for (i = 0; i < list.length; ++i) {\r\n            length += list[i].length\r\n        }\r\n    }\r\n\r\n    var buffer = Buffer.allocUnsafe(length)\r\n    var pos = 0\r\n    for (i = 0; i < list.length; ++i) {\r\n        var buf = list[i]\r\n        if (!internalIsBuffer(buf)) {\r\n            throw new TypeError('\"list\" argument must be an Array of Buffers')\r\n        }\r\n        buf.copy(buffer, pos)\r\n        pos += buf.length\r\n    }\r\n    return buffer\r\n}\r\n\r\nfunction byteLength(string, encoding) {\r\n    if (internalIsBuffer(string)) {\r\n        return string.length\r\n    }\r\n    if (\r\n        typeof ArrayBuffer !== 'undefined' &&\r\n        typeof ArrayBuffer.isView === 'function' &&\r\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)\r\n    ) {\r\n        return string.byteLength\r\n    }\r\n    if (typeof string !== 'string') {\r\n        string = '' + string\r\n    }\r\n\r\n    var len = string.length\r\n    if (len === 0) return 0\r\n\r\n    // Use a for loop to avoid recursion\r\n    var loweredCase = false\r\n    for (;;) {\r\n        switch (encoding) {\r\n            case 'ascii':\r\n            case 'latin1':\r\n            case 'binary':\r\n                return len\r\n            case 'utf8':\r\n            case 'utf-8':\r\n            case undefined:\r\n                return utf8ToBytes(string).length\r\n            case 'ucs2':\r\n            case 'ucs-2':\r\n            case 'utf16le':\r\n            case 'utf-16le':\r\n                return len * 2\r\n            case 'hex':\r\n                return len >>> 1\r\n            case 'base64':\r\n                return base64ToBytes(string).length\r\n            default:\r\n                if (loweredCase) return utf8ToBytes(string).length // assume utf8\r\n                encoding = ('' + encoding).toLowerCase()\r\n                loweredCase = true\r\n        }\r\n    }\r\n}\r\nBuffer.byteLength = byteLength\r\n\r\nfunction slowToString(encoding, start, end) {\r\n    var loweredCase = false\r\n\r\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\r\n    // property of a typed array.\r\n\r\n    // This behaves neither like String nor Uint8Array in that we set start/end\r\n    // to their upper/lower bounds if the value passed is out of range.\r\n    // undefined is handled specially as per ECMA-262 6th Edition,\r\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\r\n    if (start === undefined || start < 0) {\r\n        start = 0\r\n    }\r\n    // Return early if start > this.length. Done here to prevent potential uint32\r\n    // coercion fail below.\r\n    if (start > this.length) {\r\n        return ''\r\n    }\r\n\r\n    if (end === undefined || end > this.length) {\r\n        end = this.length\r\n    }\r\n\r\n    if (end <= 0) {\r\n        return ''\r\n    }\r\n\r\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\r\n    end >>>= 0\r\n    start >>>= 0\r\n\r\n    if (end <= start) {\r\n        return ''\r\n    }\r\n\r\n    if (!encoding) encoding = 'utf8'\r\n\r\n    while (true) {\r\n        switch (encoding) {\r\n            case 'hex':\r\n                return hexSlice(this, start, end)\r\n\r\n            case 'utf8':\r\n            case 'utf-8':\r\n                return utf8Slice(this, start, end)\r\n\r\n            case 'ascii':\r\n                return asciiSlice(this, start, end)\r\n\r\n            case 'latin1':\r\n            case 'binary':\r\n                return latin1Slice(this, start, end)\r\n\r\n            case 'base64':\r\n                return base64Slice(this, start, end)\r\n\r\n            case 'ucs2':\r\n            case 'ucs-2':\r\n            case 'utf16le':\r\n            case 'utf-16le':\r\n                return utf16leSlice(this, start, end)\r\n\r\n            default:\r\n                if (loweredCase)\r\n                    throw new TypeError('Unknown encoding: ' + encoding)\r\n                encoding = (encoding + '').toLowerCase()\r\n                loweredCase = true\r\n        }\r\n    }\r\n}\r\n\r\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\r\n// Buffer instances.\r\nBuffer.prototype._isBuffer = true\r\n\r\nfunction swap(b, n, m) {\r\n    var i = b[n]\r\n    b[n] = b[m]\r\n    b[m] = i\r\n}\r\n\r\nBuffer.prototype.swap16 = function swap16() {\r\n    var len = this.length\r\n    if (len % 2 !== 0) {\r\n        throw new RangeError('Buffer size must be a multiple of 16-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 2) {\r\n        swap(this, i, i + 1)\r\n    }\r\n    return this\r\n}\r\n\r\nBuffer.prototype.swap32 = function swap32() {\r\n    var len = this.length\r\n    if (len % 4 !== 0) {\r\n        throw new RangeError('Buffer size must be a multiple of 32-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 4) {\r\n        swap(this, i, i + 3)\r\n        swap(this, i + 1, i + 2)\r\n    }\r\n    return this\r\n}\r\n\r\nBuffer.prototype.swap64 = function swap64() {\r\n    var len = this.length\r\n    if (len % 8 !== 0) {\r\n        throw new RangeError('Buffer size must be a multiple of 64-bits')\r\n    }\r\n    for (var i = 0; i < len; i += 8) {\r\n        swap(this, i, i + 7)\r\n        swap(this, i + 1, i + 6)\r\n        swap(this, i + 2, i + 5)\r\n        swap(this, i + 3, i + 4)\r\n    }\r\n    return this\r\n}\r\n\r\nBuffer.prototype.toString = function toString() {\r\n    var length = this.length | 0\r\n    if (length === 0) return ''\r\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\r\n    return slowToString.apply(this, arguments)\r\n}\r\n\r\nBuffer.prototype.equals = function equals(b) {\r\n    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\r\n    if (this === b) return true\r\n    return Buffer.compare(this, b) === 0\r\n}\r\n\r\n\r\nBuffer.prototype.compare = function compare(\r\n    target,\r\n    start,\r\n    end,\r\n    thisStart,\r\n    thisEnd,\r\n) {\r\n    if (!internalIsBuffer(target)) {\r\n        throw new TypeError('Argument must be a Buffer')\r\n    }\r\n\r\n    if (start === undefined) {\r\n        start = 0\r\n    }\r\n    if (end === undefined) {\r\n        end = target ? target.length : 0\r\n    }\r\n    if (thisStart === undefined) {\r\n        thisStart = 0\r\n    }\r\n    if (thisEnd === undefined) {\r\n        thisEnd = this.length\r\n    }\r\n\r\n    if (\r\n        start < 0 ||\r\n        end > target.length ||\r\n        thisStart < 0 ||\r\n        thisEnd > this.length\r\n    ) {\r\n        throw new RangeError('out of range index')\r\n    }\r\n\r\n    if (thisStart >= thisEnd && start >= end) {\r\n        return 0\r\n    }\r\n    if (thisStart >= thisEnd) {\r\n        return -1\r\n    }\r\n    if (start >= end) {\r\n        return 1\r\n    }\r\n\r\n    start >>>= 0\r\n    end >>>= 0\r\n    thisStart >>>= 0\r\n    thisEnd >>>= 0\r\n\r\n    if (this === target) return 0\r\n\r\n    var x = thisEnd - thisStart\r\n    var y = end - start\r\n    var len = Math.min(x, y)\r\n\r\n    var thisCopy = this.slice(thisStart, thisEnd)\r\n    var targetCopy = target.slice(start, end)\r\n\r\n    for (var i = 0; i < len; ++i) {\r\n        if (thisCopy[i] !== targetCopy[i]) {\r\n            x = thisCopy[i]\r\n            y = targetCopy[i]\r\n            break\r\n        }\r\n    }\r\n\r\n    if (x < y) return -1\r\n    if (y < x) return 1\r\n    return 0\r\n}\r\n\r\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\r\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\r\n//\r\n// Arguments:\r\n// - buffer - a Buffer to search\r\n// - val - a string, Buffer, or number\r\n// - byteOffset - an index into `buffer`; will be clamped to an int32\r\n// - encoding - an optional encoding, relevant is val is a string\r\n// - dir - true for indexOf, false for lastIndexOf\r\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\r\n    // Empty buffer means no match\r\n    if (buffer.length === 0) return -1\r\n\r\n    // Normalize byteOffset\r\n    if (typeof byteOffset === 'string') {\r\n        encoding = byteOffset\r\n        byteOffset = 0\r\n    } else if (byteOffset > 0x7fffffff) {\r\n        byteOffset = 0x7fffffff\r\n    } else if (byteOffset < -0x80000000) {\r\n        byteOffset = -0x80000000\r\n    }\r\n    byteOffset = +byteOffset // Coerce to Number.\r\n    if (isNaN(byteOffset)) {\r\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\r\n        byteOffset = dir ? 0 : buffer.length - 1\r\n    }\r\n\r\n    // Normalize byteOffset: negative offsets start from the end of the buffer\r\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\r\n    if (byteOffset >= buffer.length) {\r\n        if (dir) return -1\r\n        else byteOffset = buffer.length - 1\r\n    } else if (byteOffset < 0) {\r\n        if (dir) byteOffset = 0\r\n        else return -1\r\n    }\r\n\r\n    // Normalize val\r\n    if (typeof val === 'string') {\r\n        val = Buffer.from(val, encoding)\r\n    }\r\n\r\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\r\n    if (internalIsBuffer(val)) {\r\n        // Special case: looking for empty string/buffer always fails\r\n        if (val.length === 0) {\r\n            return -1\r\n        }\r\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\r\n    } else if (typeof val === 'number') {\r\n        val = val & 0xff // Search for a byte value [0-255]\r\n        if (\r\n            Buffer.TYPED_ARRAY_SUPPORT &&\r\n            typeof Uint8Array.prototype.indexOf === 'function'\r\n        ) {\r\n            if (dir) {\r\n                return Uint8Array.prototype.indexOf.call(\r\n                    buffer,\r\n                    val,\r\n                    byteOffset,\r\n                )\r\n            } else {\r\n                return Uint8Array.prototype.lastIndexOf.call(\r\n                    buffer,\r\n                    val,\r\n                    byteOffset,\r\n                )\r\n            }\r\n        }\r\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\r\n    }\r\n\r\n    throw new TypeError('val must be string, number or Buffer')\r\n}\r\n\r\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\r\n    var indexSize = 1\r\n    var arrLength = arr.length\r\n    var valLength = val.length\r\n\r\n    if (encoding !== undefined) {\r\n        encoding = String(encoding).toLowerCase()\r\n        if (\r\n            encoding === 'ucs2' ||\r\n            encoding === 'ucs-2' ||\r\n            encoding === 'utf16le' ||\r\n            encoding === 'utf-16le'\r\n        ) {\r\n            if (arr.length < 2 || val.length < 2) {\r\n                return -1\r\n            }\r\n            indexSize = 2\r\n            arrLength /= 2\r\n            valLength /= 2\r\n            byteOffset /= 2\r\n        }\r\n    }\r\n\r\n    function read(buf, i) {\r\n        if (indexSize === 1) {\r\n            return buf[i]\r\n        } else {\r\n            return buf.readUInt16BE(i * indexSize)\r\n        }\r\n    }\r\n\r\n    var i\r\n    if (dir) {\r\n        var foundIndex = -1\r\n        for (i = byteOffset; i < arrLength; i++) {\r\n            if (\r\n                read(arr, i) ===\r\n                read(val, foundIndex === -1 ? 0 : i - foundIndex)\r\n            ) {\r\n                if (foundIndex === -1) foundIndex = i\r\n                if (i - foundIndex + 1 === valLength)\r\n                    return foundIndex * indexSize\r\n            } else {\r\n                if (foundIndex !== -1) i -= i - foundIndex\r\n                foundIndex = -1\r\n            }\r\n        }\r\n    } else {\r\n        if (byteOffset + valLength > arrLength)\r\n            byteOffset = arrLength - valLength\r\n        for (i = byteOffset; i >= 0; i--) {\r\n            var found = true\r\n            for (var j = 0; j < valLength; j++) {\r\n                if (read(arr, i + j) !== read(val, j)) {\r\n                    found = false\r\n                    break\r\n                }\r\n            }\r\n            if (found) return i\r\n        }\r\n    }\r\n\r\n    return -1\r\n}\r\n\r\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\r\n    return this.indexOf(val, byteOffset, encoding) !== -1\r\n}\r\n\r\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\r\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\r\n}\r\n\r\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\r\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\r\n}\r\n\r\nfunction hexWrite(buf, string, offset, length) {\r\n    offset = Number(offset) || 0\r\n    var remaining = buf.length - offset\r\n    if (!length) {\r\n        length = remaining\r\n    } else {\r\n        length = Number(length)\r\n        if (length > remaining) {\r\n            length = remaining\r\n        }\r\n    }\r\n\r\n    // must be an even number of digits\r\n    var strLen = string.length\r\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\r\n\r\n    if (length > strLen / 2) {\r\n        length = strLen / 2\r\n    }\r\n    for (var i = 0; i < length; ++i) {\r\n        var parsed = parseInt(string.substr(i * 2, 2), 16)\r\n        if (isNaN(parsed)) return i\r\n        buf[offset + i] = parsed\r\n    }\r\n    return i\r\n}\r\n\r\nfunction utf8Write(buf, string, offset, length) {\r\n    return blitBuffer(\r\n        utf8ToBytes(string, buf.length - offset),\r\n        buf,\r\n        offset,\r\n        length,\r\n    )\r\n}\r\n\r\nfunction asciiWrite(buf, string, offset, length) {\r\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction latin1Write(buf, string, offset, length) {\r\n    return asciiWrite(buf, string, offset, length)\r\n}\r\n\r\nfunction base64Write(buf, string, offset, length) {\r\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\r\n}\r\n\r\nfunction ucs2Write(buf, string, offset, length) {\r\n    return blitBuffer(\r\n        utf16leToBytes(string, buf.length - offset),\r\n        buf,\r\n        offset,\r\n        length,\r\n    )\r\n}\r\n\r\nBuffer.prototype.write = function write(string, offset, length, encoding) {\r\n    // Buffer#write(string)\r\n    if (offset === undefined) {\r\n        encoding = 'utf8'\r\n        length = this.length\r\n        offset = 0\r\n        // Buffer#write(string, encoding)\r\n    } else if (length === undefined && typeof offset === 'string') {\r\n        encoding = offset\r\n        length = this.length\r\n        offset = 0\r\n        // Buffer#write(string, offset[, length][, encoding])\r\n    } else if (isFinite(offset)) {\r\n        offset = offset | 0\r\n        if (isFinite(length)) {\r\n            length = length | 0\r\n            if (encoding === undefined) encoding = 'utf8'\r\n        } else {\r\n            encoding = length\r\n            length = undefined\r\n        }\r\n        // legacy write(string, encoding, offset, length) - remove in v0.13\r\n    } else {\r\n        throw new Error(\r\n            'Buffer.write(string, encoding, offset[, length]) is no longer supported',\r\n        )\r\n    }\r\n\r\n    var remaining = this.length - offset\r\n    if (length === undefined || length > remaining) length = remaining\r\n\r\n    if (\r\n        (string.length > 0 && (length < 0 || offset < 0)) ||\r\n        offset > this.length\r\n    ) {\r\n        throw new RangeError('Attempt to write outside buffer bounds')\r\n    }\r\n\r\n    if (!encoding) encoding = 'utf8'\r\n\r\n    var loweredCase = false\r\n    for (;;) {\r\n        switch (encoding) {\r\n            case 'hex':\r\n                return hexWrite(this, string, offset, length)\r\n\r\n            case 'utf8':\r\n            case 'utf-8':\r\n                return utf8Write(this, string, offset, length)\r\n\r\n            case 'ascii':\r\n                return asciiWrite(this, string, offset, length)\r\n\r\n            case 'latin1':\r\n            case 'binary':\r\n                return latin1Write(this, string, offset, length)\r\n\r\n            case 'base64':\r\n                // Warning: maxLength not taken into account in base64Write\r\n                return base64Write(this, string, offset, length)\r\n\r\n            case 'ucs2':\r\n            case 'ucs-2':\r\n            case 'utf16le':\r\n            case 'utf-16le':\r\n                return ucs2Write(this, string, offset, length)\r\n\r\n            default:\r\n                if (loweredCase)\r\n                    throw new TypeError('Unknown encoding: ' + encoding)\r\n                encoding = ('' + encoding).toLowerCase()\r\n                loweredCase = true\r\n        }\r\n    }\r\n}\r\n\r\nBuffer.prototype.toJSON = function toJSON() {\r\n    return {\r\n        type: 'Buffer',\r\n        data: Array.prototype.slice.call(this._arr || this, 0),\r\n    }\r\n}\r\n\r\nfunction base64Slice(buf, start, end) {\r\n    if (start === 0 && end === buf.length) {\r\n        return base64fromByteArray(buf)\r\n    } else {\r\n        return base64fromByteArray(buf.slice(start, end))\r\n    }\r\n}\r\n\r\nfunction utf8Slice(buf, start, end) {\r\n    end = Math.min(buf.length, end)\r\n    var res = []\r\n\r\n    var i = start\r\n    while (i < end) {\r\n        var firstByte = buf[i]\r\n        var codePoint = null\r\n        var bytesPerSequence =\r\n            firstByte > 0xef\r\n                ? 4\r\n                : firstByte > 0xdf\r\n                ? 3\r\n                : firstByte > 0xbf\r\n                ? 2\r\n                : 1\r\n\r\n        if (i + bytesPerSequence <= end) {\r\n            var secondByte, thirdByte, fourthByte, tempCodePoint\r\n\r\n            switch (bytesPerSequence) {\r\n                case 1:\r\n                    if (firstByte < 0x80) {\r\n                        codePoint = firstByte\r\n                    }\r\n                    break\r\n                case 2:\r\n                    secondByte = buf[i + 1]\r\n                    if ((secondByte & 0xc0) === 0x80) {\r\n                        tempCodePoint =\r\n                            ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)\r\n                        if (tempCodePoint > 0x7f) {\r\n                            codePoint = tempCodePoint\r\n                        }\r\n                    }\r\n                    break\r\n                case 3:\r\n                    secondByte = buf[i + 1]\r\n                    thirdByte = buf[i + 2]\r\n                    if (\r\n                        (secondByte & 0xc0) === 0x80 &&\r\n                        (thirdByte & 0xc0) === 0x80\r\n                    ) {\r\n                        tempCodePoint =\r\n                            ((firstByte & 0xf) << 0xc) |\r\n                            ((secondByte & 0x3f) << 0x6) |\r\n                            (thirdByte & 0x3f)\r\n                        if (\r\n                            tempCodePoint > 0x7ff &&\r\n                            (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)\r\n                        ) {\r\n                            codePoint = tempCodePoint\r\n                        }\r\n                    }\r\n                    break\r\n                case 4:\r\n                    secondByte = buf[i + 1]\r\n                    thirdByte = buf[i + 2]\r\n                    fourthByte = buf[i + 3]\r\n                    if (\r\n                        (secondByte & 0xc0) === 0x80 &&\r\n                        (thirdByte & 0xc0) === 0x80 &&\r\n                        (fourthByte & 0xc0) === 0x80\r\n                    ) {\r\n                        tempCodePoint =\r\n                            ((firstByte & 0xf) << 0x12) |\r\n                            ((secondByte & 0x3f) << 0xc) |\r\n                            ((thirdByte & 0x3f) << 0x6) |\r\n                            (fourthByte & 0x3f)\r\n                        if (\r\n                            tempCodePoint > 0xffff &&\r\n                            tempCodePoint < 0x110000\r\n                        ) {\r\n                            codePoint = tempCodePoint\r\n                        }\r\n                    }\r\n            }\r\n        }\r\n\r\n        if (codePoint === null) {\r\n            // we did not generate a valid codePoint so insert a\r\n            // replacement char (U+FFFD) and advance only 1 byte\r\n            codePoint = 0xfffd\r\n            bytesPerSequence = 1\r\n        } else if (codePoint > 0xffff) {\r\n            // encode to utf16 (surrogate pair dance)\r\n            codePoint -= 0x10000\r\n            res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)\r\n            codePoint = 0xdc00 | (codePoint & 0x3ff)\r\n        }\r\n\r\n        res.push(codePoint)\r\n        i += bytesPerSequence\r\n    }\r\n\r\n    return decodeCodePointsArray(res)\r\n}\r\n\r\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\r\n// the lowest limit is Chrome, with 0x10000 args.\r\n// We go 1 magnitude less, for safety\r\nvar MAX_ARGUMENTS_LENGTH = 0x1000\r\n\r\nfunction decodeCodePointsArray(codePoints) {\r\n    var len = codePoints.length\r\n    if (len <= MAX_ARGUMENTS_LENGTH) {\r\n        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\r\n    }\r\n\r\n    // Decode in chunks to avoid \"call stack size exceeded\".\r\n    var res = ''\r\n    var i = 0\r\n    while (i < len) {\r\n        res += String.fromCharCode.apply(\r\n            String,\r\n            codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH)),\r\n        )\r\n    }\r\n    return res\r\n}\r\n\r\nfunction asciiSlice(buf, start, end) {\r\n    var ret = ''\r\n    end = Math.min(buf.length, end)\r\n\r\n    for (var i = start; i < end; ++i) {\r\n        ret += String.fromCharCode(buf[i] & 0x7f)\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction latin1Slice(buf, start, end) {\r\n    var ret = ''\r\n    end = Math.min(buf.length, end)\r\n\r\n    for (var i = start; i < end; ++i) {\r\n        ret += String.fromCharCode(buf[i])\r\n    }\r\n    return ret\r\n}\r\n\r\nfunction hexSlice(buf, start, end) {\r\n    var len = buf.length\r\n\r\n    if (!start || start < 0) start = 0\r\n    if (!end || end < 0 || end > len) end = len\r\n\r\n    var out = ''\r\n    for (var i = start; i < end; ++i) {\r\n        out += toHex(buf[i])\r\n    }\r\n    return out\r\n}\r\n\r\nfunction utf16leSlice(buf, start, end) {\r\n    var bytes = buf.slice(start, end)\r\n    var res = ''\r\n    for (var i = 0; i < bytes.length; i += 2) {\r\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\r\n    }\r\n    return res\r\n}\r\n\r\nBuffer.prototype.slice = function slice(start, end) {\r\n    var len = this.length\r\n    start = ~~start\r\n    end = end === undefined ? len : ~~end\r\n\r\n    if (start < 0) {\r\n        start += len\r\n        if (start < 0) start = 0\r\n    } else if (start > len) {\r\n        start = len\r\n    }\r\n\r\n    if (end < 0) {\r\n        end += len\r\n        if (end < 0) end = 0\r\n    } else if (end > len) {\r\n        end = len\r\n    }\r\n\r\n    if (end < start) end = start\r\n\r\n    var newBuf\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        newBuf = this.subarray(start, end)\r\n        newBuf.__proto__ = Buffer.prototype\r\n    } else {\r\n        var sliceLen = end - start\r\n        newBuf = new Buffer(sliceLen, undefined)\r\n        for (var i = 0; i < sliceLen; ++i) {\r\n            newBuf[i] = this[i + start]\r\n        }\r\n    }\r\n\r\n    return newBuf\r\n}\r\n\r\n/*\r\n * Need to make sure that buffer isn't trying to write out of bounds.\r\n */\r\nfunction checkOffset(offset, ext, length) {\r\n    if (offset % 1 !== 0 || offset < 0)\r\n        throw new RangeError('offset is not uint')\r\n    if (offset + ext > length)\r\n        throw new RangeError('Trying to access beyond buffer length')\r\n}\r\n\r\nBuffer.prototype.readUIntLE = function readUIntLE(\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var val = this[offset]\r\n    var mul = 1\r\n    var i = 0\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n        val += this[offset + i] * mul\r\n    }\r\n\r\n    return val\r\n}\r\n\r\nBuffer.prototype.readUIntBE = function readUIntBE(\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) {\r\n        checkOffset(offset, byteLength, this.length)\r\n    }\r\n\r\n    var val = this[offset + --byteLength]\r\n    var mul = 1\r\n    while (byteLength > 0 && (mul *= 0x100)) {\r\n        val += this[offset + --byteLength] * mul\r\n    }\r\n\r\n    return val\r\n}\r\n\r\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 1, this.length)\r\n    return this[offset]\r\n}\r\n\r\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    return this[offset] | (this[offset + 1] << 8)\r\n}\r\n\r\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    return (this[offset] << 8) | this[offset + 1]\r\n}\r\n\r\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (\r\n        (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) +\r\n        this[offset + 3] * 0x1000000\r\n    )\r\n}\r\n\r\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (\r\n        this[offset] * 0x1000000 +\r\n        ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])\r\n    )\r\n}\r\n\r\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var val = this[offset]\r\n    var mul = 1\r\n    var i = 0\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n        val += this[offset + i] * mul\r\n    }\r\n    mul *= 0x80\r\n\r\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n    return val\r\n}\r\n\r\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\r\n\r\n    var i = byteLength\r\n    var mul = 1\r\n    var val = this[offset + --i]\r\n    while (i > 0 && (mul *= 0x100)) {\r\n        val += this[offset + --i] * mul\r\n    }\r\n    mul *= 0x80\r\n\r\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\r\n\r\n    return val\r\n}\r\n\r\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 1, this.length)\r\n    if (!(this[offset] & 0x80)) return this[offset]\r\n    return (0xff - this[offset] + 1) * -1\r\n}\r\n\r\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    var val = this[offset] | (this[offset + 1] << 8)\r\n    return val & 0x8000 ? val | 0xffff0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 2, this.length)\r\n    var val = this[offset + 1] | (this[offset] << 8)\r\n    return val & 0x8000 ? val | 0xffff0000 : val\r\n}\r\n\r\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (\r\n        this[offset] |\r\n        (this[offset + 1] << 8) |\r\n        (this[offset + 2] << 16) |\r\n        (this[offset + 3] << 24)\r\n    )\r\n}\r\n\r\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n\r\n    return (\r\n        (this[offset] << 24) |\r\n        (this[offset + 1] << 16) |\r\n        (this[offset + 2] << 8) |\r\n        this[offset + 3]\r\n    )\r\n}\r\n\r\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n    return ieee754read(this, offset, true, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 4, this.length)\r\n    return ieee754read(this, offset, false, 23, 4)\r\n}\r\n\r\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 8, this.length)\r\n    return ieee754read(this, offset, true, 52, 8)\r\n}\r\n\r\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\r\n    if (!noAssert) checkOffset(offset, 8, this.length)\r\n    return ieee754read(this, offset, false, 52, 8)\r\n}\r\n\r\nfunction checkInt(buf, value, offset, ext, max, min) {\r\n    if (!internalIsBuffer(buf))\r\n        throw new TypeError('\"buffer\" argument must be a Buffer instance')\r\n    if (value > max || value < min)\r\n        throw new RangeError('\"value\" argument is out of bounds')\r\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n}\r\n\r\nBuffer.prototype.writeUIntLE = function writeUIntLE(\r\n    value,\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) {\r\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n    }\r\n\r\n    var mul = 1\r\n    var i = 0\r\n    this[offset] = value & 0xff\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n        this[offset + i] = (value / mul) & 0xff\r\n    }\r\n\r\n    return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUIntBE = function writeUIntBE(\r\n    value,\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    byteLength = byteLength | 0\r\n    if (!noAssert) {\r\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\r\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\r\n    }\r\n\r\n    var i = byteLength - 1\r\n    var mul = 1\r\n    this[offset + i] = value & 0xff\r\n    while (--i >= 0 && (mul *= 0x100)) {\r\n        this[offset + i] = (value / mul) & 0xff\r\n    }\r\n\r\n    return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\r\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n    this[offset] = value & 0xff\r\n    return offset + 1\r\n}\r\n\r\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\r\n    if (value < 0) value = 0xffff + value + 1\r\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\r\n        buf[offset + i] =\r\n            (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\r\n            ((littleEndian ? i : 1 - i) * 8)\r\n    }\r\n}\r\n\r\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value & 0xff\r\n        this[offset + 1] = value >>> 8\r\n    } else {\r\n        objectWriteUInt16(this, value, offset, true)\r\n    }\r\n    return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value >>> 8\r\n        this[offset + 1] = value & 0xff\r\n    } else {\r\n        objectWriteUInt16(this, value, offset, false)\r\n    }\r\n    return offset + 2\r\n}\r\n\r\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\r\n    if (value < 0) value = 0xffffffff + value + 1\r\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\r\n        buf[offset + i] = (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff\r\n    }\r\n}\r\n\r\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset + 3] = value >>> 24\r\n        this[offset + 2] = value >>> 16\r\n        this[offset + 1] = value >>> 8\r\n        this[offset] = value & 0xff\r\n    } else {\r\n        objectWriteUInt32(this, value, offset, true)\r\n    }\r\n    return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value >>> 24\r\n        this[offset + 1] = value >>> 16\r\n        this[offset + 2] = value >>> 8\r\n        this[offset + 3] = value & 0xff\r\n    } else {\r\n        objectWriteUInt32(this, value, offset, false)\r\n    }\r\n    return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeIntLE = function writeIntLE(\r\n    value,\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) {\r\n        var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n    }\r\n\r\n    var i = 0\r\n    var mul = 1\r\n    var sub = 0\r\n    this[offset] = value & 0xff\r\n    while (++i < byteLength && (mul *= 0x100)) {\r\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\r\n            sub = 1\r\n        }\r\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\r\n    }\r\n\r\n    return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeIntBE = function writeIntBE(\r\n    value,\r\n    offset,\r\n    byteLength,\r\n    noAssert,\r\n) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) {\r\n        var limit = Math.pow(2, 8 * byteLength - 1)\r\n\r\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\r\n    }\r\n\r\n    var i = byteLength - 1\r\n    var mul = 1\r\n    var sub = 0\r\n    this[offset + i] = value & 0xff\r\n    while (--i >= 0 && (mul *= 0x100)) {\r\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\r\n            sub = 1\r\n        }\r\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\r\n    }\r\n\r\n    return offset + byteLength\r\n}\r\n\r\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\r\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\r\n    if (value < 0) value = 0xff + value + 1\r\n    this[offset] = value & 0xff\r\n    return offset + 1\r\n}\r\n\r\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value & 0xff\r\n        this[offset + 1] = value >>> 8\r\n    } else {\r\n        objectWriteUInt16(this, value, offset, true)\r\n    }\r\n    return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value >>> 8\r\n        this[offset + 1] = value & 0xff\r\n    } else {\r\n        objectWriteUInt16(this, value, offset, false)\r\n    }\r\n    return offset + 2\r\n}\r\n\r\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value & 0xff\r\n        this[offset + 1] = value >>> 8\r\n        this[offset + 2] = value >>> 16\r\n        this[offset + 3] = value >>> 24\r\n    } else {\r\n        objectWriteUInt32(this, value, offset, true)\r\n    }\r\n    return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\r\n    value = +value\r\n    offset = offset | 0\r\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\r\n    if (value < 0) value = 0xffffffff + value + 1\r\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\r\n        this[offset] = value >>> 24\r\n        this[offset + 1] = value >>> 16\r\n        this[offset + 2] = value >>> 8\r\n        this[offset + 3] = value & 0xff\r\n    } else {\r\n        objectWriteUInt32(this, value, offset, false)\r\n    }\r\n    return offset + 4\r\n}\r\n\r\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\r\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\r\n    if (offset < 0) throw new RangeError('Index out of range')\r\n}\r\n\r\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\r\n    if (!noAssert) {\r\n        checkIEEE754(\r\n            buf,\r\n            value,\r\n            offset,\r\n            4,\r\n            3.4028234663852886e38,\r\n            -3.4028234663852886e38,\r\n        )\r\n    }\r\n    ieee754write(buf, value, offset, littleEndian, 23, 4)\r\n    return offset + 4\r\n}\r\n\r\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\r\n    return writeFloat(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\r\n    return writeFloat(this, value, offset, false, noAssert)\r\n}\r\n\r\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\r\n    if (!noAssert) {\r\n        checkIEEE754(\r\n            buf,\r\n            value,\r\n            offset,\r\n            8,\r\n            1.7976931348623157e308,\r\n            -1.7976931348623157e308,\r\n        )\r\n    }\r\n    ieee754write(buf, value, offset, littleEndian, 52, 8)\r\n    return offset + 8\r\n}\r\n\r\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    return writeDouble(this, value, offset, true, noAssert)\r\n}\r\n\r\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(\r\n    value,\r\n    offset,\r\n    noAssert,\r\n) {\r\n    return writeDouble(this, value, offset, false, noAssert)\r\n}\r\n\r\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\r\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\r\n    if (!start) start = 0\r\n    if (!end && end !== 0) end = this.length\r\n    if (targetStart >= target.length) targetStart = target.length\r\n    if (!targetStart) targetStart = 0\r\n    if (end > 0 && end < start) end = start\r\n\r\n    // Copy 0 bytes; we're done\r\n    if (end === start) return 0\r\n    if (target.length === 0 || this.length === 0) return 0\r\n\r\n    // Fatal error conditions\r\n    if (targetStart < 0) {\r\n        throw new RangeError('targetStart out of bounds')\r\n    }\r\n    if (start < 0 || start >= this.length)\r\n        throw new RangeError('sourceStart out of bounds')\r\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\r\n\r\n    // Are we oob?\r\n    if (end > this.length) end = this.length\r\n    if (target.length - targetStart < end - start) {\r\n        end = target.length - targetStart + start\r\n    }\r\n\r\n    var len = end - start\r\n    var i\r\n\r\n    if (this === target && start < targetStart && targetStart < end) {\r\n        // descending copy from end\r\n        for (i = len - 1; i >= 0; --i) {\r\n            target[i + targetStart] = this[i + start]\r\n        }\r\n    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\r\n        // ascending copy from start\r\n        for (i = 0; i < len; ++i) {\r\n            target[i + targetStart] = this[i + start]\r\n        }\r\n    } else {\r\n        Uint8Array.prototype.set.call(\r\n            target,\r\n            this.subarray(start, start + len),\r\n            targetStart,\r\n        )\r\n    }\r\n\r\n    return len\r\n}\r\n\r\n// Usage:\r\n//    buffer.fill(number[, offset[, end]])\r\n//    buffer.fill(buffer[, offset[, end]])\r\n//    buffer.fill(string[, offset[, end]][, encoding])\r\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\r\n    // Handle string cases:\r\n    if (typeof val === 'string') {\r\n        if (typeof start === 'string') {\r\n            encoding = start\r\n            start = 0\r\n            end = this.length\r\n        } else if (typeof end === 'string') {\r\n            encoding = end\r\n            end = this.length\r\n        }\r\n        if (val.length === 1) {\r\n            var code = val.charCodeAt(0)\r\n            if (code < 256) {\r\n                val = code\r\n            }\r\n        }\r\n        if (encoding !== undefined && typeof encoding !== 'string') {\r\n            throw new TypeError('encoding must be a string')\r\n        }\r\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\r\n            throw new TypeError('Unknown encoding: ' + encoding)\r\n        }\r\n    } else if (typeof val === 'number') {\r\n        val = val & 255\r\n    }\r\n\r\n    // Invalid ranges are not set to a default, so can range check early.\r\n    if (start < 0 || this.length < start || this.length < end) {\r\n        throw new RangeError('Out of range index')\r\n    }\r\n\r\n    if (end <= start) {\r\n        return this\r\n    }\r\n\r\n    start = start >>> 0\r\n    end = end === undefined ? this.length : end >>> 0\r\n\r\n    if (!val) val = 0\r\n\r\n    var i\r\n    if (typeof val === 'number') {\r\n        for (i = start; i < end; ++i) {\r\n            this[i] = val\r\n        }\r\n    } else {\r\n        var bytes = internalIsBuffer(val)\r\n            ? val\r\n            : utf8ToBytes(new Buffer(val, encoding).toString())\r\n        var len = bytes.length\r\n        for (i = 0; i < end - start; ++i) {\r\n            this[i + start] = bytes[i % len]\r\n        }\r\n    }\r\n\r\n    return this\r\n}\r\n\r\n// HELPER FUNCTIONS\r\n// ================\r\n\r\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\r\n\r\nfunction base64clean(str) {\r\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\r\n    str = stringtrim(str).replace(INVALID_BASE64_RE, '')\r\n    // Node converts strings with length < 2 to ''\r\n    if (str.length < 2) return ''\r\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\r\n    while (str.length % 4 !== 0) {\r\n        str = str + '='\r\n    }\r\n    return str\r\n}\r\n\r\nfunction stringtrim(str) {\r\n    if (str.trim) return str.trim()\r\n    return str.replace(/^\\s+|\\s+$/g, '')\r\n}\r\n\r\nfunction toHex(n) {\r\n    if (n < 16) return '0' + n.toString(16)\r\n    return n.toString(16)\r\n}\r\n\r\nfunction utf8ToBytes(string, units) {\r\n    units = units || Infinity\r\n    var codePoint\r\n    var length = string.length\r\n    var leadSurrogate = null\r\n    var bytes = []\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n        codePoint = string.charCodeAt(i)\r\n\r\n        // is surrogate component\r\n        if (codePoint > 0xd7ff && codePoint < 0xe000) {\r\n            // last char was a lead\r\n            if (!leadSurrogate) {\r\n                // no lead yet\r\n                if (codePoint > 0xdbff) {\r\n                    // unexpected trail\r\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\r\n                    continue\r\n                } else if (i + 1 === length) {\r\n                    // unpaired lead\r\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\r\n                    continue\r\n                }\r\n\r\n                // valid lead\r\n                leadSurrogate = codePoint\r\n\r\n                continue\r\n            }\r\n\r\n            // 2 leads in a row\r\n            if (codePoint < 0xdc00) {\r\n                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\r\n                leadSurrogate = codePoint\r\n                continue\r\n            }\r\n\r\n            // valid surrogate pair\r\n            codePoint =\r\n                (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +\r\n                0x10000\r\n        } else if (leadSurrogate) {\r\n            // valid bmp char, but last char was a lead\r\n            if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\r\n        }\r\n\r\n        leadSurrogate = null\r\n\r\n        // encode utf8\r\n        if (codePoint < 0x80) {\r\n            if ((units -= 1) < 0) break\r\n            bytes.push(codePoint)\r\n        } else if (codePoint < 0x800) {\r\n            if ((units -= 2) < 0) break\r\n            bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80)\r\n        } else if (codePoint < 0x10000) {\r\n            if ((units -= 3) < 0) break\r\n            bytes.push(\r\n                (codePoint >> 0xc) | 0xe0,\r\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\r\n                (codePoint & 0x3f) | 0x80,\r\n            )\r\n        } else if (codePoint < 0x110000) {\r\n            if ((units -= 4) < 0) break\r\n            bytes.push(\r\n                (codePoint >> 0x12) | 0xf0,\r\n                ((codePoint >> 0xc) & 0x3f) | 0x80,\r\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\r\n                (codePoint & 0x3f) | 0x80,\r\n            )\r\n        } else {\r\n            throw new Error('Invalid code point')\r\n        }\r\n    }\r\n\r\n    return bytes\r\n}\r\n\r\nfunction asciiToBytes(str) {\r\n    var byteArray = []\r\n    for (var i = 0; i < str.length; ++i) {\r\n        // Node's code seems to be doing this and not & 0x7F..\r\n        byteArray.push(str.charCodeAt(i) & 0xff)\r\n    }\r\n    return byteArray\r\n}\r\n\r\nfunction utf16leToBytes(str, units) {\r\n    var c, hi, lo\r\n    var byteArray = []\r\n    for (var i = 0; i < str.length; ++i) {\r\n        if ((units -= 2) < 0) break\r\n\r\n        c = str.charCodeAt(i)\r\n        hi = c >> 8\r\n        lo = c % 256\r\n        byteArray.push(lo)\r\n        byteArray.push(hi)\r\n    }\r\n\r\n    return byteArray\r\n}\r\n\r\nfunction base64ToBytes(str) {\r\n    return base64toByteArray(base64clean(str))\r\n}\r\n\r\nfunction blitBuffer(src, dst, offset, length) {\r\n    for (var i = 0; i < length; ++i) {\r\n        if (i + offset >= dst.length || i >= src.length) break\r\n        dst[i + offset] = src[i]\r\n    }\r\n    return i\r\n}\r\n\r\nfunction isnan(val) {\r\n    return val !== val // eslint-disable-line no-self-compare\r\n}\r\n\r\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\r\n// The _isBuffer check is for Safari 5-7 support, because it's missing\r\n// Object.prototype.constructor. Remove this eventually\r\nfunction isBuffer(obj) {\r\n    return (\r\n        obj != null &&\r\n        (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\r\n    )\r\n}\r\n\r\nfunction isFastBuffer(obj) {\r\n    return (\r\n        !!obj.constructor &&\r\n        typeof obj.constructor.isBuffer === 'function' &&\r\n        obj.constructor.isBuffer(obj)\r\n    )\r\n}\r\n\r\n// For Node v0.10 support. Remove this eventually.\r\nfunction isSlowBuffer(obj) {\r\n    return (\r\n        typeof obj.readFloatLE === 'function' &&\r\n        typeof obj.slice === 'function' &&\r\n        isFastBuffer(obj.slice(0, 0))\r\n    )\r\n}\r\n\r\nfunction ieee754read(buffer, offset, isLE, mLen, nBytes) {\r\n    var e, m\r\n    var eLen = nBytes * 8 - mLen - 1\r\n    var eMax = (1 << eLen) - 1\r\n    var eBias = eMax >> 1\r\n    var nBits = -7\r\n    var i = isLE ? nBytes - 1 : 0\r\n    var d = isLE ? -1 : 1\r\n    var s = buffer[offset + i]\r\n\r\n    i += d\r\n\r\n    e = s & ((1 << -nBits) - 1)\r\n    s >>= -nBits\r\n    nBits += eLen\r\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n    m = e & ((1 << -nBits) - 1)\r\n    e >>= -nBits\r\n    nBits += mLen\r\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\r\n\r\n    if (e === 0) {\r\n        e = 1 - eBias\r\n    } else if (e === eMax) {\r\n        return m ? NaN : (s ? -1 : 1) * Infinity\r\n    } else {\r\n        m = m + Math.pow(2, mLen)\r\n        e = e - eBias\r\n    }\r\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\r\n}\r\n\r\nfunction ieee754write(buffer, value, offset, isLE, mLen, nBytes) {\r\n    var e, m, c\r\n    var eLen = nBytes * 8 - mLen - 1\r\n    var eMax = (1 << eLen) - 1\r\n    var eBias = eMax >> 1\r\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0\r\n    var i = isLE ? 0 : nBytes - 1\r\n    var d = isLE ? 1 : -1\r\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\r\n\r\n    value = Math.abs(value)\r\n\r\n    if (isNaN(value) || value === Infinity) {\r\n        m = isNaN(value) ? 1 : 0\r\n        e = eMax\r\n    } else {\r\n        e = Math.floor(Math.log(value) / Math.LN2)\r\n        if (value * (c = Math.pow(2, -e)) < 1) {\r\n            e--\r\n            c *= 2\r\n        }\r\n        if (e + eBias >= 1) {\r\n            value += rt / c\r\n        } else {\r\n            value += rt * Math.pow(2, 1 - eBias)\r\n        }\r\n        if (value * c >= 2) {\r\n            e++\r\n            c /= 2\r\n        }\r\n\r\n        if (e + eBias >= eMax) {\r\n            m = 0\r\n            e = eMax\r\n        } else if (e + eBias >= 1) {\r\n            m = (value * c - 1) * Math.pow(2, mLen)\r\n            e = e + eBias\r\n        } else {\r\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\r\n            e = 0\r\n        }\r\n    }\r\n\r\n    for (\r\n        ;\r\n        mLen >= 8;\r\n        buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8\r\n    ) {}\r\n\r\n    e = (e << mLen) | m\r\n    eLen += mLen\r\n    for (\r\n        ;\r\n        eLen > 0;\r\n        buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8\r\n    ) {}\r\n\r\n    buffer[offset + i - d] |= s * 128\r\n}\r\n", "export { Buffer } from '_node-buffer-polyfill_.js'\r\n"],
  "mappings": "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",
  "names": ["e", "Buffer", "fill", "i", "compare", "byteLength"]
}
